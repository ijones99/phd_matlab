
%% GENERATE LOOKUP AND CONFIG TABLES
% get electrode configuration file data: ELCONFIGINFO
% the ELCONFIGINFO file has x,y coords and electrode numbers
% ---------- Settings ----------
suffixName = '_moving_bars';
flistName = 'flist_moving_Bars'
elNumbers = [4938 5444 5647 5750 5851];
elConfigClusterType = 'overlapping';

pre_process_data_by_el(suffixName, flistName, elNumbers, elConfigClusterType)

%% SUPERVISED SORTING (MANUAL) - create the cl_ files

% sort_ums_output(flist, 'add_dir_suffix',suffixName, 'all_in_dir' ); %, 'sel_in_dir',1:12
selEls = [elNumbers];
sort_ums_output(flist, 'add_dir_suffix',suffixName, 'sel_els_in_dir',  selEls(30:31)); %, 'sel_in_dir',1:12
%% REVIEW CLUSTERS
review_clusters(flist,'add_dir_suffix', suffixName,'all_in_dir'); %'sel_els', 5772, 'sel_in_dir', 12 

%% EXTRACT TIME STAMPS FROM SORTED FILES 
% auto: create st_ files & create neuronIndList.mat file with names of all
% ...neurons found.
extract_spiketimes_from_cl_files(flist, 'add_dir_suffix',suffixName )

%% SPIKE COMPARISONS
% produces heatmaps
tsMatrix = load_spiketrains(flistFileNameID);
binWidthMs =1;
[heatMap] = get_heatmap_of_matching_ts(binWidthMs, tsMatrix  );
figure, imagesc(heatMap);

%% FIND REDUNDANT CLUSTERS
[sortedRedundantClusterGroupsInds redundantClusterGroupsInds ] = ...
    find_redundant_clusters(tsMatrix, heatMap, ...
    'bin_width', 0.5,'matching_thresh',0.30 );

%% SELECT UNIQUE AND BEST NEURONS
% This function plots all of the neuron spike trains for the unique neurons
fileNo = 1;
selNeuronInds = find_unique_neurons(tsMatrix, heatMap, 'bin_width', 0.5, ...
    'matching_thresh',0.30 );
% look at el numbers
elNumbers= extract_el_numbers_from_files(  strcat('../analysed_data/', ...
    flistFileNameID,'/03_Neuron_Selection/'), ...
    'st_*', flist, 'sel_inds',sortedRedundantClusterGroupsInds{1} )

%% NEURON DATA QUALITY SHEETS
clusterNameCore = '6376n3';
plot_quality_datasheet_from_cluster_name(flist, suffixName, clusterNameCore, ...
    'file_save', 1 )

%%
dateValTxt = '17July2012';
dirNameFlashingDots = strcat(fullfile('../Figs/',   flistFileNameID, '/flashing_dot'));
mkdir(dirNameFlashingDots);
selNeuronInds = [1     9    13    16    19    21];
textLabel = {'flashing_dots'}  
load StimCode/CurrExp/StimParams_SpotsIncrSize.mat

plot_raster_for_flashing_dots(flistFileNameID, flist, dateValTxt, dirNameFlashingDots, ...
    selNeuronInds, textLabel, Settings, StimMats)
    

