function [idx, dist]=get_closest_electrode(x, y, idx_list, exclude_idx_list, cnt)

% return the distance and the index for the closest electrode
% 
% args:
%       x: is a list of x-coordinates
%       y: is a list of y-coordinates
%       idx_list: all idx-dist pairs for the specified idx are returned
%       exclude_idx_list: if 1, then the points in idx_list will not be
%                         compared against each other
%       cnt: default is 1. If >1, the cnt number of closest neurons are
%            returned
%

len=length(x);
if length(y)~=len
    error('x and y must have the same length')
end

if nargin<3
    idx_list=1:len;
end
if nargin<4
    exclude_idx_list=0;
end
if nargin<5
    cnt=1;
end

inv_idx_list=1:length(x);

if exclude_idx_list
    inv_idx_list(idx_list)=[];
end

dist2=(x(inv_idx_list)'*ones(1,length(idx_list))-(x(idx_list)'*ones(1,length(inv_idx_list)))').^2+(y(inv_idx_list)'*ones(1,length(idx_list))-(y(idx_list)'*ones(1,length(inv_idx_list)))').^2;
if ~exclude_idx_list
    dist2(sub2ind(size(dist2), idx_list, 1:length(idx_list)))=inf;
end
if cnt==1
    [dminv2 idx]=min(dist2);
    dist=sqrt(dminv2);
elseif cnt>1
    [dminv2,idx] = sort(dist2);
    dist=sqrt(dminv2);
    idx=idx(1:cnt);
    dist=dist(1:cnt);
else
    error('cnt has to be >=1');
end











