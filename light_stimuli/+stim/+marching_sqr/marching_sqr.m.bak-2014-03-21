function marching_sqr( window, Settings)

% check for parapin
if exist('parapin.mexglx','file')
    parapinStr = 'parapin';
else
    parapinStr = 'paramex';
end

% KbName('KeyNamesLinux') %run this command to get the
% names of the keys

fprintf('Start Marching Square\n')
do_record = 1;
fullScreen=0;
showMouse = 0;

umToPixConv = Settings.umToPixConv;
% Values for size of stimulus square
% edgeLength = edgeLength/umToPixConv; % 600 pixels will convert to 1050 um
edgeLengthH = ceil(Settings.edgeLengthUm/umToPixConv);
edgeLengthV = ceil(Settings.edgeLengthUm/umToPixConv);
largeSquareSizePx = Settings.screenSizeUm/umToPixConv;
% Make sure this is running on OpenGL Psychtoolbox:
% AssertOpenGL;

% KbName('KeyNamesLinux') %run this command to get the
% names of the keys

% whichScreen = 0;
% window = Screen(whichScreen, 'OpenWindow');
% Screen(window, 'FillRect', Settings.blackVal);

screenMatrixBlank=ones(largeSquareSizePx,largeSquareSizePx, 3).*Settings.grayVal;
screenMatrixBlank(:,:,1) = 0;
screenMatrixBase=zeros(largeSquareSizePx,largeSquareSizePx, 3);
IndsMiddleSqr = [round(largeSquareSizePx/2)-round(edgeLengthV/2) ...
    round(largeSquareSizePx/2)-round(edgeLengthV/2)+edgeLengthV]
screenMatrixBase(IndsMiddleSqr(1):IndsMiddleSqr(2),IndsMiddleSqr(1):IndsMiddleSqr(2),2) ...
    = 1;
screenMatrixBase(IndsMiddleSqr(1):IndsMiddleSqr(2),IndsMiddleSqr(1):IndsMiddleSqr(2),3) ...
    = 1;
size(screenMatrixBase)

screenMatrixON = screenMatrixBase;
screenMatrixOFF = screenMatrixBase;

screenMatrixON(find(screenMatrixON==0)) = Settings.grayVal;
screenMatrixON(find(screenMatrixON==1)) = Settings.whiteVal;
screenMatrixON(:,:,1) = 0;
screenMatrixOFF(find(screenMatrixOFF==0)) = Settings.grayVal;
screenMatrixOFF(find(screenMatrixOFF==1)) = Settings.blackVal;
screenMatrixOFF(:,:,1) = 0;

wBlank = Screen(window, 'MakeTexture', screenMatrixBlank);
% w(2) = Screen(window, 'MakeTexture', Settings.blackVal*m);
     Screen(window, 'DrawTexture', wBlank    );
     Screen(window,'Flip');
     pause(3)
totalNumSteps = round(Settings.movementRangeUm/Settings.stepSizeUm)





for iDir = 1:length(Settings.movementRangeUm)
    
    startingPointInd = -round((Settings.movementRangeUm(iDir)/Settings.umToPixConv)/2);
    stepSizePx = round( Settings.stepSizeUm(iDir)/Settings.umToPixConv);
    for iRepeat = 1:Settings.stimulusRepeats
        for i=1:totalNumSteps
            if iDir == 1
            w(1) = Screen(window, 'MakeTexture', circshift(screenMatrixON,[0 startingPointInd+(i-1)*stepSizePx]));
            else
                w(1) = Screen(window, 'MakeTexture', circshift(screenMatrixON,[startingPointInd+(i-1)*stepSizePx 0]));
            end
            startingPointInd*stepSizePx+(i-1)*stepSizePx
            Screen('DrawTexture', window, w(1));
            eval([parapinStr,'(',num2str(6),')']);
            Screen(window,'Flip');
            eval([parapinStr,'(',num2str(4),')']);
            pause(Settings.frameShowIntervalSec)
            Screen('DrawTexture', window, wBlank);
            eval([parapinStr,'(',num2str(6),')']);
            Screen(window,'Flip');
            eval([parapinStr,'(',num2str(4),')']);
            pause(Settings.frameShowIntervalSec)
            Screen('Close',w);
            
        end
        pause(1)
    end
    pause(1.5)
    for iRepeat = 1:Settings.stimulusRepeats
        for i=1:totalNumSteps
            if iDir == 1
                w(1) = Screen(window, 'MakeTexture', circshift(screenMatrixOFF,[0 startingPointInd+(i-1)*stepSizePx]));
            else
                w(1) = Screen(window, 'MakeTexture', circshift(screenMatrixOFF,[startingPointInd+(i-1)*stepSizePx 0]));
            end
            
            
            
            startingPointInd*stepSizePx+(i-1)*stepSizePx
            Screen('DrawTexture', window, w(1));
            eval([parapinStr,'(',num2str(6),')']);
            Screen(window,'Flip');
            eval([parapinStr,'(',num2str(4),')']);
            pause(Settings.frameShowIntervalSec)
            Screen('DrawTexture', window, wBlank);
            eval([parapinStr,'(',num2str(6),')']);
            Screen(window,'Flip');
            eval([parapinStr,'(',num2str(4),')']);
            pause(Settings.frameShowIntervalSec)
            Screen('Close',w);
            %         Screen('Close',whidBlank);
            
        end
        pause(2)
    end
end

Screen('DrawTexture', window, wBlank);
Screen(window,'Flip');
pause(2)

KbWait;
Screen('CloseAll');

end